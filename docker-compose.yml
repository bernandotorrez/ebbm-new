

services:
  # PHP-FPM Application Service
  php:
    build:
      context: .
      dockerfile: docker/php/Dockerfile
      target: development
      args:
        - CACHEBUST=1
    container_name: ebbm-php
    restart: unless-stopped
    working_dir: /var/www/html
    volumes:
      - .:/var/www/html:delegated
      - ./docker/php/php.ini:/usr/local/etc/php/conf.d/99-custom.ini:ro
      - ./docker/php/opcache.ini:/usr/local/etc/php/conf.d/opcache.ini:ro
      - ./docker/php/php-fpm-pool.conf:/usr/local/etc/php-fpm.d/www.conf:ro
      - php_log:/var/log
    environment:
      - PHP_IDE_CONFIG=serverName=ebbm-laravel
    networks:
      - ebbm-network
    depends_on:
      - mysql
      - redis
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:9000/ping || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Nginx Web Server
  nginx:
    image: nginx:1.25-alpine
    container_name: ebbm-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - .:/var/www/html:ro
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
      - nginx_cache:/var/cache/nginx
      - nginx_log:/var/log/nginx
    networks:
      - ebbm-network
    depends_on:
      - php
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/nginx-health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Percona MySQL Database
  mysql:
    image: percona:8.0
    container_name: ebbm-mysql
    restart: unless-stopped
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD:-secret}
      MYSQL_DATABASE: ${DB_DATABASE:-ebbm_new}
      MYSQL_USER: ${DB_USERNAME:-ebbm_user}
      MYSQL_PASSWORD: ${DB_PASSWORD:-secret}
    volumes:
      - mysql_data:/var/lib/mysql
      - ./docker/mysql/my.cnf:/etc/mysql/conf.d/custom.cnf:ro
      - mysql_log:/var/log/mysql
    networks:
      - ebbm-network
    command: >
      --innodb-buffer-pool-size=512M
      --innodb-redo-log-capacity=268435456
      --max-connections=200
      --thread-cache-size=50
      --slow-query-log=1
      --long-query-time=2
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p${DB_PASSWORD:-secret}"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s

  # Redis Cache Service
  redis:
    image: redis:7.2-alpine
    container_name: ebbm-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
      - ./docker/redis/redis.conf:/usr/local/etc/redis/redis.conf:ro
    networks:
      - ebbm-network
    command: redis-server /usr/local/etc/redis/redis.conf
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Queue Worker (Laravel Horizon alternative)
  queue:
    build:
      context: .
      dockerfile: docker/php/Dockerfile
      target: development
    restart: unless-stopped
    working_dir: /var/www/html
    volumes:
      - .:/var/www/html:delegated
      - ./docker/php/php.ini:/usr/local/etc/php/conf.d/99-custom.ini:ro
      - queue_log:/var/log
    networks:
      - ebbm-network
    depends_on:
      - mysql
      - redis
    command: php artisan queue:work --sleep=3 --tries=3 --max-time=3600
    deploy:
      replicas: 2

  # Laravel Scheduler
  scheduler:
    build:
      context: .
      dockerfile: docker/php/Dockerfile
      target: development
    container_name: ebbm-scheduler
    restart: unless-stopped
    working_dir: /var/www/html
    volumes:
      - .:/var/www/html:delegated
      - ./docker/php/php.ini:/usr/local/etc/php/conf.d/99-custom.ini:ro
    networks:
      - ebbm-network
    depends_on:
      - mysql
      - redis
    command: >
      sh -c "while true; do
        php artisan schedule:run --verbose --no-interaction &
        sleep 60
      done"

  # Mailhog (Development Email Testing)
  mailhog:
    image: mailhog/mailhog:latest
    container_name: ebbm-mailhog
    restart: unless-stopped
    ports:
      - "1025:1025"  # SMTP
      - "8025:8025"  # Web UI
    networks:
      - ebbm-network

# Docker Networks
networks:
  ebbm-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

# Docker Volumes
volumes:
  mysql_data:
    driver: local
  redis_data:
    driver: local
  nginx_cache:
    driver: local
  php_log:
    driver: local
  nginx_log:
    driver: local
  mysql_log:
    driver: local
  queue_log:
    driver: local