# Optimized Docker Compose for Laravel Filament 3
# Faster builds, better caching, and production-ready

services:
  # ===============================================
  # PHP-FPM Service with Multi-stage Build
  # ===============================================
  php:
    build:
      context: .
      dockerfile: docker/php/Dockerfile
      target: production
      args:
        PHP_VERSION: 8.3.17
      cache_from:
        - ebbm-php:latest
        - ebbm-php:dependencies
    image: ebbm-php:latest
    container_name: ebbm_php
    restart: unless-stopped
    working_dir: /var/www/html
    volumes:
      # Only mount writable directories for development
      - ./storage:/var/www/html/storage
      - ./bootstrap/cache:/var/www/html/bootstrap/cache
      # Mount source code only in development
      - ./app:/var/www/html/app
      - ./config:/var/www/html/config
      - ./database:/var/www/html/database
      - ./resources:/var/www/html/resources
      - ./routes:/var/www/html/routes
      - ./.env:/var/www/html/.env:ro
    environment:
      - APP_ENV=local
      - APP_DEBUG=true
      - DB_CONNECTION=mysql
      - DB_HOST=mysql
      - DB_PORT=3306
      - DB_DATABASE=ebbm_local
      - DB_USERNAME=ebbm_user
      - DB_PASSWORD=ebbm_password
      - CACHE_DRIVER=redis
      - SESSION_DRIVER=redis
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - APP_KEY=${APP_KEY:-}
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_started
    networks:
      - ebbm_network
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "9000"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    deploy:
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M

  # ===============================================
  # Nginx Service with Optimized Configuration
  # ===============================================
  nginx:
    image: nginx:1.25-alpine
    container_name: ebbm_nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./public:/var/www/html/public:ro
      - ./storage/app/public:/var/www/html/storage/app/public:ro
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
      - nginx_cache:/var/cache/nginx
    depends_on:
      php:
        condition: service_healthy
    networks:
      - ebbm_network
    healthcheck:
      test: ["CMD", "nginx", "-t"]
      interval: 30s
      timeout: 5s
      retries: 3
    deploy:
      resources:
        limits:
          memory: 128M
        reservations:
          memory: 64M

  # ===============================================
  # Optimized MySQL Service with Health Checks
  # ===============================================
  mysql:
    image: percona:8.0
    container_name: ebbm_mysql
    restart: unless-stopped
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-root_password}
      MYSQL_DATABASE: ${DB_DATABASE:-ebbm_local}
      MYSQL_USER: ${DB_USERNAME:-ebbm_user}
      MYSQL_PASSWORD: ${DB_PASSWORD:-ebbm_password}
    volumes:
      - mysql_data:/var/lib/mysql
      - ./docker/mysql/my.cnf:/etc/mysql/my.cnf:ro
    networks:
      - ebbm_network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "${DB_USERNAME:-ebbm_user}", "-p${DB_PASSWORD:-ebbm_password}"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s
    deploy:
      resources:
        limits:
          memory: 1G
        reservations:
          memory: 512M

  # ===============================================
  # Optimized Redis Service
  # ===============================================
  redis:
    image: redis:7-alpine
    container_name: ebbm_redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    command: >
      redis-server
      --maxmemory 512mb
      --maxmemory-policy allkeys-lru
      --save 900 1
      --save 300 10
      --save 60 10000
    volumes:
      - redis_data:/data
    networks:
      - ebbm_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 5s
      retries: 3
    deploy:
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M

  # ===============================================
  # Optimized Node.js Service for Vite
  # ===============================================
  node:
    image: node:18-alpine
    container_name: ebbm_node
    restart: unless-stopped
    working_dir: /app
    ports:
      - "5173:5173"
    volumes:
      - ./:/app
      - node_modules:/app/node_modules
    command: sh -c "npm ci --only=production && npm run dev -- --host 0.0.0.0"
    networks:
      - ebbm_network
    environment:
      - NODE_ENV=development
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:5173"]
      interval: 30s
      timeout: 5s
      retries: 3
    deploy:
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M

  # ===============================================
  # Development Tools (Profile: dev)
  # ===============================================
  phpmyadmin:
    image: phpmyadmin/phpmyadmin:latest
    container_name: ebbm_phpmyadmin
    restart: unless-stopped
    ports:
      - "8080:80"
    environment:
      PMA_HOST: mysql
      PMA_USER: root
      PMA_PASSWORD: ${MYSQL_ROOT_PASSWORD:-root_password}
      PMA_ARBITRARY: 1
      UPLOAD_LIMIT: 256M
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - ebbm_network
    profiles:
      - dev
    deploy:
      resources:
        limits:
          memory: 256M
        reservations:
          memory: 128M

  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: ebbm_redis_commander
    restart: unless-stopped
    ports:
      - "8081:8081"
    environment:
      - REDIS_HOSTS=local:redis:6379
    depends_on:
      redis:
        condition: service_started
    networks:
      - ebbm_network
    profiles:
      - dev
    deploy:
      resources:
        limits:
          memory: 128M
        reservations:
          memory: 64M

# ===============================================
# Optimized Volumes and Networks
# ===============================================
volumes:
  mysql_data:
    driver: local
  redis_data:
    driver: local
  nginx_cache:
    driver: local
  node_modules:
    driver: local

networks:
  ebbm_network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
    driver_opts:
      com.docker.network.bridge.name: ebbm_network