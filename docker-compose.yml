version: '3.8'

services:
  # PHP-FPM Service
  app:
    build:
      context: .
      dockerfile: Dockerfile
      target: production # Ganti ke 'development' jika ada stage khusus development
    container_name: myapp-app
    restart: unless-stopped
    working_dir: /var/www/html
    volumes:
      # Sinkronisasi kode aplikasi utama Anda saja
      - ./src:/var/www/html
      # Gunakan 'named volume' untuk direktori yang jarang berubah & banyak file
      # Ini akan mencegah sinkronisasi lambat untuk ribuan file dependensi
      - vendor_data:/var/www/html/vendor
      - node_modules_data:/var/www/html/node_modules # Jika menggunakan node
    networks:
      - app-network

  # Nginx Service
  nginx:
    image: nginx:1.25-alpine
    container_name: myapp-nginx
    restart: unless-stopped
    ports:
      - "80:80"
    volumes:
      # Nginx tetap butuh akses ke file statis (CSS, JS, gambar)
      - ./src/public:/var/www/html/public
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
    networks:
      - app-network
    depends_on:
      - app

  # Percona MySQL Service
  db:
    image: percona:8.0
    container_name: myapp-db
    restart: unless-stopped
    ports:
      - "3306:3306"
    environment:
      MYSQL_DATABASE: ebbm_new
      MYSQL_USER: ebbm_user
      MYSQL_PASSWORD: ebbm_password
      MYSQL_ROOT_PASSWORD: RootPassword!
    volumes:
      # Named volume untuk data database sudah benar dan performan
      - dbdata:/var/lib/mysql
    networks:
      - app-network

# Docker Networks
networks:
  app-network:
    driver: bridge

# Volumes
volumes:
  dbdata:
    driver: local
  # Definisikan named volume untuk dependensi
  vendor_data:
    driver: local
  node_modules_data:
    driver: local