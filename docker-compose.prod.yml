services:
  # PHP-FPM Service
  php:
    build:
      context: .
      dockerfile: docker/php/Dockerfile
    container_name: ebbm_php_prod
    restart: always
    working_dir: /var/www/html
    volumes:
      - ./storage:/var/www/html/storage
      - ./bootstrap/cache:/var/www/html/bootstrap/cache
    environment:
      - APP_ENV=production
      - APP_DEBUG=false
      - DB_CONNECTION=mysql
      - DB_HOST=mysql
      - DB_PORT=3306
      - CACHE_DRIVER=redis
      - SESSION_DRIVER=redis
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    env_file:
      - .env.production
    depends_on:
      - mysql
      - redis
    networks:
      - ebbm_network
    deploy:
      resources:
        limits:
          memory: 1G
        reservations:
          memory: 512M

  # Nginx Service
  nginx:
    image: nginx:alpine
    container_name: ebbm_nginx_prod
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./public:/var/www/html/public:ro
      - ./storage/app/public:/var/www/html/storage/app/public:ro
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      - php
    networks:
      - ebbm_network
    deploy:
      resources:
        limits:
          memory: 256M
        reservations:
          memory: 128M

  # Percona MySQL Service
  mysql:
    image: percona:8.0
    container_name: ebbm_mysql_prod
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD_FILE: /run/secrets/mysql_root_password
      MYSQL_DATABASE: ebbm_production
      MYSQL_USER: ebbm_user
      MYSQL_PASSWORD_FILE: /run/secrets/mysql_password
    volumes:
      - mysql_data:/var/lib/mysql
      - ./docker/mysql/my.cnf:/etc/mysql/my.cnf:ro
    secrets:
      - mysql_root_password
      - mysql_password
    networks:
      - ebbm_network
    deploy:
      resources:
        limits:
          memory: 2G
        reservations:
          memory: 1G

  # Redis Service for caching and sessions
  redis:
    image: redis:7-alpine
    container_name: ebbm_redis_prod
    restart: always
    command: redis-server --maxmemory 512mb --maxmemory-policy allkeys-lru --save 900 1 --save 300 10 --save 60 10000
    volumes:
      - redis_data:/data
    networks:
      - ebbm_network
    deploy:
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M

  # Queue Worker (for Laravel jobs)
  queue:
    build:
      context: .
      dockerfile: docker/php/Dockerfile
    container_name: ebbm_queue_prod
    restart: always
    working_dir: /var/www/html
    command: php artisan queue:work --sleep=3 --tries=3 --max-time=3600
    volumes:
      - ./storage:/var/www/html/storage
    env_file:
      - .env.production
    depends_on:
      - mysql
      - redis
    networks:
      - ebbm_network
    deploy:
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M

  # Scheduler (for Laravel schedule)
  scheduler:
    build:
      context: .
      dockerfile: docker/php/Dockerfile
    container_name: ebbm_scheduler_prod
    restart: always
    working_dir: /var/www/html
    command: sh -c "while true; do php artisan schedule:run && sleep 60; done"
    volumes:
      - ./storage:/var/www/html/storage
    env_file:
      - .env.production
    depends_on:
      - mysql
      - redis
    networks:
      - ebbm_network
    deploy:
      resources:
        limits:
          memory: 256M
        reservations:
          memory: 128M

secrets:
  mysql_root_password:
    file: ./secrets/mysql_root_password.txt
  mysql_password:
    file: ./secrets/mysql_password.txt

volumes:
  mysql_data:
    driver: local
  redis_data:
    driver: local

networks:
  ebbm_network:
    driver: bridge