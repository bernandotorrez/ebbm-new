version: '3.8'

services:
  # Production PHP-FPM Service
  php:
    build:
      context: .
      dockerfile: docker/php/Dockerfile
      target: production
      args:
        - CACHEBUST=1
    container_name: ebbm-php-prod
    restart: unless-stopped
    working_dir: /var/www/html
    volumes:
      - app_storage:/var/www/html/storage
      - app_cache:/var/www/html/bootstrap/cache
      - php_log:/var/log
    environment:
      - APP_ENV=production
      - APP_DEBUG=false
    networks:
      - ebbm-network
    depends_on:
      - mysql
      - redis
    deploy:
      replicas: 3
      resources:
        limits:
          cpus: '1.0'
          memory: 512M
        reservations:
          cpus: '0.5'
          memory: 256M
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:9000/ping || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Production Nginx Service
  nginx:
    image: nginx:1.25-alpine
    container_name: ebbm-nginx-prod
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
      - ./docker/nginx/ssl:/etc/nginx/ssl:ro
      - nginx_cache:/var/cache/nginx
      - nginx_log:/var/log/nginx
    networks:
      - ebbm-network
    depends_on:
      - php
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 256M
        reservations:
          cpus: '0.25'
          memory: 128M

  # Production MySQL Service
  mysql:
    image: percona:8.0
    container_name: ebbm-mysql-prod
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_USER: ${DB_USERNAME}
      MYSQL_PASSWORD: ${DB_PASSWORD}
    volumes:
      - mysql_data:/var/lib/mysql
      - ./docker/mysql/my.cnf:/etc/mysql/conf.d/custom.cnf:ro
      - mysql_log:/var/log/mysql
    networks:
      - ebbm-network
    command: >
      --innodb-buffer-pool-size=1G
      --innodb-log-file-size=256M
      --max-connections=500
      --thread-cache-size=100
      --query-cache-size=128M
      --query-cache-type=1
      --slow-query-log=1
      --slow-query-log-file=/var/log/mysql/slow.log
      --long-query-time=1
    deploy:
      resources:
        limits:
          cpus: '2.0'
          memory: 2G
        reservations:
          cpus: '1.0'
          memory: 1G

  # Production Redis Service
  redis:
    image: redis:7.2-alpine
    container_name: ebbm-redis-prod
    restart: unless-stopped
    volumes:
      - redis_data:/data
      - ./docker/redis/redis.conf:/usr/local/etc/redis/redis.conf:ro
    networks:
      - ebbm-network
    command: redis-server /usr/local/etc/redis/redis.conf
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
        reservations:
          cpus: '0.25'
          memory: 256M

  # Production Queue Workers
  queue:
    build:
      context: .
      dockerfile: docker/php/Dockerfile
      target: production
    container_name: ebbm-queue-prod
    restart: unless-stopped
    working_dir: /var/www/html
    volumes:
      - app_storage:/var/www/html/storage
      - queue_log:/var/log
    environment:
      - APP_ENV=production
    networks:
      - ebbm-network
    depends_on:
      - mysql
      - redis
    command: php artisan queue:work --sleep=3 --tries=3 --max-time=3600 --memory=128
    deploy:
      replicas: 4
      resources:
        limits:
          cpus: '0.5'
          memory: 256M
        reservations:
          cpus: '0.25'
          memory: 128M

# Production Networks
networks:
  ebbm-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.21.0.0/16

# Production Volumes
volumes:
  mysql_data:
    driver: local
  redis_data:
    driver: local
  nginx_cache:
    driver: local
  app_storage:
    driver: local
  app_cache:
    driver: local
  php_log:
    driver: local
  nginx_log:
    driver: local
  mysql_log:
    driver: local
  queue_log:
    driver: local